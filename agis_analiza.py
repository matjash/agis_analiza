# -*- coding: utf-8 -*-
"""
/***************************************************************************
 AgisAnaliza
                                 A QGIS plugin
 Zbirka orodij za arheologe analitike
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2020-02-14
        git sha              : $Format:%H$
        copyright            : (C) 2020 by Matja≈æ Mori
        email                : matjaz.mori@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from PyQt5.QtCore import QSettings, QTranslator, qVersion, QCoreApplication
from PyQt5.QtGui import QIcon
from qgis.core import QgsApplication

from qgis.core import QgsProcessingAlgorithm, QgsApplication
from .processing_provider.provider import Provider 
from .resources import *



class AgisAnaliza:
    def __init__(self):
        self.provider = Provider()
  
    def initGui(self):
        QgsApplication.processingRegistry().addProvider(self.provider)
    
    def tr(self, message):
        """Get the translation for a string using Qt translation API.
        We implement this ourselves since we do not inherit QObject.
        :param message: String for translation.
        :type message: str, QString
        :returns: Translated version of message.
        :rtype: QString
        """
        # noinspection PyTypeChecker,PyArgumentList,PyCallByClass
        return QCoreApplication.translate('AgisAnaliza', message)
        
    def unload(self):
        QgsApplication.processingRegistry().removeProvider(self.provider)

